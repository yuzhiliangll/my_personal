TCP -- 拥塞控制
拥塞控制
防止过多的数据注入到网络中
避免网络中的路由器或链路过载

拥塞控制是一个全局性的过程
涉及到所有的主机、路由器
以及与降低网络传输性能有关的所有因素
是大家共同努力的结果

相比而言, 流量控制是点对点通信的控制

==========================================================================================
==========================================================================================
拥塞控制的方法

慢开始(slow start):
在TCP连接建立初期，发送方会缓慢地增加其拥塞窗口大小，以防止突然涌入大量数据导致网络拥塞。
随着数据的成功传输，拥塞窗口逐步以指数级增长，直到达到慢启动门限（ssthresh）。


拥塞避免(congestion avoidance)
当拥塞窗口大小达到或超过ssthresh后，TCP进入拥塞避免阶段，
此时窗口大小以线性增长，而不是指数增长，以避免网络拥塞。

快速重传(fast retransmit)
当发送方连续收到三个重复的ACK时，便立即重传可能丢失的报文段，
而不必等待重传超时发生。

快速恢复(fast recovery)
在快速重传后，TCP通常不会像在慢启动阶段那样将拥塞窗口减到最低，
而是将其减半并继续进行拥塞避免。

====================================================================================
====================================================================================

拥塞控制的目标

高带宽
低时延
高吞吐量
低丢包率
高可靠性
====================================================================================
====================================================================================

3. 数据的封装过程
该文件夹内的 拥塞控制1.png 图中展示了在不同网络层次中，数据是如何封装和传输的：

传输层 (Transport Layer)
段 (Segment)：
图中显示传输层的一个TCP段包含20字节的TCP头部和1460字节的数据。
这个段就是在传输层处理的基本数据单元。

------------------------------------------
虽然理论上的MSS（最大报文段长度）在典型的以太网环境下是1460字节（1500字节的以太网MTU减去20字节的IP头和20字节的TCP头），
但实际使用中的MSS值通常会低于这个理论最大值。
以下是一些原因和协商过程的解释：
1. MSS的协商过程
在TCP三次握手（Three-Way Handshake）过程中，通信双方会通过MSS选项协商出一个合适的MSS值。
每一方都会根据自己的网络环境向对方通告一个建议的MSS值，这个值通常是根据自己的网络配置、MTU大小、以及其他可能的网络条件（如隧道、VPN、碎片问题等）计算得出的。
双方最终使用的MSS值通常是两者中较小的那个，以确保数据包能够在整个路径上顺利传输。
2. 实际MSS为何会较低
路径MTU发现 (Path MTU Discovery, PMTUD)：
在理想情况下，MSS应基于路径上最小的MTU计算。
然而，由于网络中的某些链路可能具有更低的MTU（例如，使用隧道协议、VPN、或者其他链路层协议），导致实际的MSS需要相应减小，以避免数据包在传输中需要分片。
网络中存在的中间设备：某些网络设备，如防火墙或路由器，可能会限制传输的数据包大小。为了避免这些中间设备强制分片或丢弃过大的包，发送方可能选择更小的MSS。
兼容性和安全性：
在一些情况下，网络管理员可能会配置更低的MSS，以确保兼容性或安全性。
这种情况通常发生在复杂的网络环境中，尤其是涉及不同厂商设备或不同网络协议的情况下。
3. 实际MSS示例
标准以太网：
在标准以太网情况下，MTU通常为1500字节，MSS理论上可以达到1460字节。
但如果存在更小的MTU链路（例如通过VPN时，MTU可能只有1400字节），MSS可能会降到1360字节或更低。
广域网（WAN）：
在某些广域网连接中，由于链路协议的不同，MTU可能更低，如576字节的MTU。
这种情况下，MSS可能会进一步降到536字节或更低。
4. MSS的重要性
合适的MSS值可以避免数据包在网络中途被分片，从而减少重组开销，提高网络传输效率。
较低的MSS值虽然会增大TCP报文的个数，但可以确保每个报文在网络中传输时不需要进一步分片，提高数据传输的可靠性。
---------------------------------------------------------------------------------------------------------------------------------

网络层 (Network Layer)
包 (Packet)：
传输层的段进入网络层后，网络层会添加20字节的IP头部，形成一个IP包。
此时，数据部分的长度变为1480字节。
数据链路层 (Data Link Layer)
帧 (Frame)：
当IP包进一步传输到数据链路层时，数据链路层会添加帧头和帧尾，使其成为一个数据帧。
图中标明数据帧的总长度为1500字节，这是典型的以太网帧的最大长度（MTU，最大传输单元）。
4. 图中的主要重点
分层封装：
图中清晰展示了数据从传输层到网络层，再到数据链路层的封装过程。
每一层都会添加相应的头部信息，使数据段逐渐变大。
MSS的重要性：
MSS的大小直接影响传输层的数据段长度，进而影响网络层的包和数据链路层的帧的大小。
如果MSS设置过大，可能会导致网络层需要进一步分片，影响传输效率。


====================================================================================
====================================================================================
几个缩写

cwnd: congestion window, 拥塞窗口
定义：CWND是发送方维护的一个窗口大小，用于控制发送数据的速率。它表示发送方在当前网络条件下认为可以安全发送的数据量。
作用：CWND用于实现TCP的拥塞控制。其大小会根据网络中的拥塞情况动态调整。通常，CWND在初始阶段较小，在没有拥塞的情况下逐步增大，一旦检测到拥塞，CWND会减小。
算法：CWND的调整涉及慢启动（Slow Start）、拥塞避免（Congestion Avoidance）、快速重传（Fast Retransmit）和快速恢复（Fast Recovery）等算法。


ssthresh: slow start threshold, 慢开始门限
定义：SSTHRESH是CWND和慢启动过程中的一个阈值，用来决定拥塞窗口的增长方式。
作用：当CWND小于SSTHRESH时，TCP处于慢启动阶段，CWND以指数方式增长；当CWND达到SSTHRESH后，TCP进入拥塞避免阶段，CWND以线性方式增长。
调整：当网络发生拥塞（例如检测到丢包），SSTHRESH通常会被设置为当前CWND的一半，CWND会被减小到1个MSS，重新进入慢启动过程。


rwnd: receive window, 接收窗口
定义：RWND是接收方维护的窗口大小，用于指示接收方的缓存区中还可以接收多少数据。
作用：RWND通过TCP报文头中的“窗口大小”字段通知发送方，发送方根据RWND大小决定发送的数据量。RWND用于实现流量控制，确保接收方不会因为缓存区满而丢失数据。
动态变化：RWND的大小会根据接收方处理数据的速度动态调整。如果接收方缓存区有空闲空间，RWND会增大，反之则减小。


swnd: send window, 发送窗口
定义：SWND是发送方的发送窗口，它决定了发送方最多可以发送但尚未确认的数据量。
作用：SWND是由CWND和RWND共同决定的，即SWND = min(CWND, RWND)。发送方的数据传输速率受制于这两个因素中较小的那个。
意义：SWND确保发送的数据量既不会超过网络的拥塞限制（由CWND控制），也不会超过接收方的接收能力（由RWND控制）。
-----√ swnd = min(cwnd, rwnd)------

mss: maximum segment size, 最大报文段长度(在建立连接时确定)

定义：MSS是发送方和接收方在TCP连接建立时协商的最大报文段长度，表示单个TCP报文段中可以传输的最大数据量（不包括TCP头部）-----也就是数据部分大小。
作用：MSS限制了每次发送的数据块大小，确保数据包不会过大而在传输过程中需要进行网络层的分片，从而优化网络传输效率。
影响因素：MSS的大小通常由路径上最小的MTU（最大传输单元）决定，减去IP和TCP头部后的数据部分长度。


cwr: congestion window reduced, 拥塞窗口减小
定义：CWR是TCP报文头中的一个标志位，用于通知接收方发送方已经检测到网络拥塞并且相应地减小了拥塞窗口（CWND）。
作用：当发送方根据网络拥塞情况（例如接收到的ECN标记）减少了CWND时，会在接下来的报文段中设置CWR标志，以通知接收方该调整。
配合使用：CWR通常与显式拥塞通知（ECN）机制配合使用，帮助发送方和接收方更好地应对网络拥塞。

dupACK: duplicate ACK, 重复确认
定义：DupACK是指接收方接收到乱序的报文段后，重复发送相同的ACK（确认报文）给发送方的现象。
作用：重复的ACK通常表明某个报文段在传输过程中丢失或乱序。发送方在接收到三个连续的DupACK时，会触发快速重传机制，重传可能丢失的报文段，而无需等待超时发生。
拥塞控制：DupACK是TCP拥塞控制的重要信号，当发送方检测到DupACK时，通常会认为发生了轻微的网络拥塞，从而减小CWND并进行快速恢复。

============================================================================================================
============================================================================================================





