<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MusicPlayer</class>
 <widget class="QWidget" name="MusicPlayer">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>832</width>
    <height>476</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MusicPlayer</string>
  </property>
  <property name="styleSheet">
   <string notr="true"/>
  </property>
  <widget class="QLabel" name="label_CurrentTime">
   <property name="geometry">
    <rect>
     <x>390</x>
     <y>390</y>
     <width>41</width>
     <height>21</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <property name="text">
    <string>0.0</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_TotalTime">
   <property name="geometry">
    <rect>
     <x>690</x>
     <y>390</y>
     <width>41</width>
     <height>21</height>
    </rect>
   </property>
   <property name="text">
    <string>0.0</string>
   </property>
  </widget>
  <widget class="QWidget" name="widget" native="true">
   <property name="geometry">
    <rect>
     <x>450</x>
     <y>100</y>
     <width>331</width>
     <height>211</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QWidget#widget 
{
    background-image: url(:/image/LRC_background_image.png);
    background-attachment: fixed; /* 确保背景图像固定不动 */
    background-position: center; /* 图像在控件中居中 */
    background-repeat: no-repeat; /* 不重复显示背景图像 */
}

</string>
   </property>
   <widget class="QLabel" name="label_LRC_1">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>40</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>10</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;
QLabel#label_LRC 
{
    border: 0px;
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC_2">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>70</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC_3">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>100</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC_4">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>130</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC_5">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>160</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">font: 9pt &quot;Blackadder ITC&quot;;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_LRC_6">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>190</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
  <widget class="QSlider" name="horizontalSlider">
   <property name="geometry">
    <rect>
     <x>390</x>
     <y>410</y>
     <width>321</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QSlider::groove:horizontal {
    border: 1px solid #bbb;
    background: white;
    height: 10px;
    border-radius: 4px;
}

QSlider::sub-page:horizontal {
    background: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
        stop: 0 #66e,
        stop: 1 #bbf);
    border: 1px solid #777;
    height: 10px;
    border-radius: 4px;
}

QSlider::add-page:horizontal {
    background: #fff;
    border: 1px solid #777;
    height: 10px;
    border-radius: 4px;
}

QSlider::handle:horizontal {
    background: qradialgradient(spread: pad, cx: 0.5, cy: 0.5, radius: 0.5, fx: 0.5, fy: 0.5,
        stop: 0.6 #45ADED,
        stop: 0.778409 rgba(255, 255, 255, 255));
    border: 1px solid #777;
    border-radius: 6px;
    width: 13px;
    margin-top: -2px;
    margin-bottom: -2px;
}

QSlider::handle:horizontal:hover {
    background: qradialgradient(spread: pad, cx: 0.5, cy: 0.5, radius: 0.5, fx: 0.5, fy: 0.5,
        stop: 0.6 #2A8BDA,
        stop: 0.778409 rgba(255, 255, 255, 255));
    border: 1px solid #444;
    border-radius: 6px;
}
</string>
   </property>
   <property name="orientation">
    <enum>Qt::Horizontal</enum>
   </property>
  </widget>
  <widget class="QListWidget" name="listWidget">
   <property name="geometry">
    <rect>
     <x>140</x>
     <y>100</y>
     <width>261</width>
     <height>211</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QListWidget#listWidget 
{
    border:none;
    background-image: url(:/image/listWidget_background_image1.png);
    background-attachment: fixed; /* 确保背景图像固定不动 */
    background-position: center; /* 图像在控件中居中 */
    background-repeat: no-repeat; /* 不重复显示背景图像 */
	font: 9pt &quot;华文隶书&quot;;
	text-decoration: underline;
}
	</string>
   </property>
  </widget>
  <widget class="QPushButton" name="Play">
   <property name="geometry">
    <rect>
     <x>540</x>
     <y>430</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton 
{
    background-color: lightgreen;
    border-radius: 15px; /* 调整为合适的值，使按钮变为圆形 */
    color: white; /* 使文本颜色为白色，确保在深绿色背景上可见 */
    padding: 10px; /* 添加一些填充，以使按钮具有适当的大小 */
}

QPushButton:pressed 
{
    background-color: #90ee90; /* 按下时的背景颜色，可以比浅绿色更暗 */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="Next">
   <property name="geometry">
    <rect>
     <x>580</x>
     <y>430</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton 
{
    background-color: white; /* 初始背景颜色 */
    border-radius: 15px; /* 调整为合适的值，使按钮变为圆形 */
    color: black; /* 初始文本颜色 */
    padding: 10px; /* 添加一些填充，以使按钮具有适当的大小 */
    border: 2px solid #90ee90; /* 初始边框颜色 */
}

QPushButton:hover 
{
    background-color: lightgreen; /* 鼠标悬停时的背景颜色 */
    border: 2px solid lightgreen; /* 鼠标悬停时的边框颜色 */
    color: white; /* 鼠标悬停时的文本颜色 */
}

QPushButton:pressed 
{
    background-color: #90ee90; /* 按下时的背景颜色 */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="Prev">
   <property name="geometry">
    <rect>
     <x>500</x>
     <y>430</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton 
{
    background-color: white; /* 初始背景颜色 */
    border-radius: 15px; /* 调整为合适的值，使按钮变为圆形 */
    color: black; /* 初始文本颜色 */
    padding: 10px; /* 添加一些填充，以使按钮具有适当的大小 */
    border: 2px solid #90ee90; /* 初始边框颜色 */
}

QPushButton:hover 
{
    background-color: lightgreen; /* 鼠标悬停时的背景颜色 */
    border: 2px solid lightgreen; /* 鼠标悬停时的边框颜色 */
    color: white; /* 鼠标悬停时的文本颜色 */
}

QPushButton:pressed 
{
    background-color: #90ee90; /* 按下时的背景颜色 */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QSlider" name="verticalSlider">
   <property name="geometry">
    <rect>
     <x>750</x>
     <y>350</y>
     <width>16</width>
     <height>71</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QSlider::groove:vertical 
{
    border: 1px solid #999999;
    background: white; /* 背景颜色为白色 */
    width: 5px; /* 滑槽的宽度 */
    border-radius: 4px;
}

QSlider::handle:vertical 
{
    background: white; /* 滑块颜色为白色 */
    border: 1px solid #5c5c5c;
    height: 10px; /* 滑块的高度 */
    margin: -3px -3px; /* 控制滑块的宽度和位置 */
    border-radius: 5px;
}

QSlider::add-page:vertical 
{
    background: #9ACD32; /* 稍微深一点的绿色 */
    border: 1px solid #777;
    width: 10px;
    border-radius: 4px;
}
QSlider::sub-page:vertical 
{
    background: white; /* 未滑动部分的颜色为白色 */
    border: 1px solid #999999;
    width: 10px;
    border-radius: 4px;
}
QSlider::handle:vertical:hover 
{
    background: #cccccc; /* 悬停时的背景颜色 */
    border: 1px solid #5c5c5c;
}


</string>
   </property>
   <property name="orientation">
    <enum>Qt::Vertical</enum>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_volume">
   <property name="geometry">
    <rect>
     <x>720</x>
     <y>420</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton 
{
    border: none;
    background-color: transparent; /* 清除默认背景色 */
    /* width: 70px; /* 设置按钮宽度 */
    /* height: 70px; /* 设置按钮高度 */
    border-radius: 15px; /* 圆形按钮，半径为宽度或高度的一半 */
    /* padding: 10px; /* 可选：设置内边距以控制按钮大小 */
	border: 2px solid rgb(144, 238, 144); /* 添加浅绿色边框 */
}
QPushButton::hover
{
	background-color: rgb(56, 255, 21);
};</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_updateVolume">
   <property name="geometry">
    <rect>
     <x>760</x>
     <y>420</y>
     <width>34</width>
     <height>34</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel#label_updateVolume {
    text-align: center; /* 文本居中 */
}

</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_baidu">
   <property name="geometry">
    <rect>
     <x>730</x>
     <y>60</y>
     <width>61</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel#label_baidu 
{
    border: 2px solid green; /* 设置绿色边框 */
    background-color: white; /* 默认背景颜色为白色 */
    border-radius: 10px; /* 设置圆角 */
    padding: 5px 10px; /* 内边距 */
}

QLabel#label_baidu:hover {
    border-color: lightgreen; /* 悬停时边框为浅绿色 */
    background-color: lightgreen; /* 悬停时背景为浅绿色 */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QLabel" name="label_gif_one">
   <property name="geometry">
    <rect>
     <x>730</x>
     <y>10</y>
     <width>101</width>
     <height>51</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QLabel#label_gif_one 
{
    border: 2px solid white; /* 设置白色边框 */
    background-color: white; /* 默认背景颜色为白色 */
    border-radius: 5px; /* 设置圆角 */
    padding: 5px 10px; /* 内边距 */
}

QLabel#label_gif_one:hover {
    border-color: white; /* 悬停时边框为白色 */
    background-color: lightyellow; /* 悬停时背景为浅黄色 */
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QListWidget" name="listWidget_musicposter">
   <property name="geometry">
    <rect>
     <x>170</x>
     <y>320</y>
     <width>211</width>
     <height>141</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QListWidget#listWidget_musicposter
{
    background: transparent;
	border: none;
}
</string>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_playmode">
   <property name="geometry">
    <rect>
     <x>400</x>
     <y>430</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#pushButton_playmode 
{
    border-radius: 10px; /* 调整为合适的值，使按钮变为圆形 */
    color: black; /* 初始文本颜色 */
    padding: 10px; /* 添加一些填充，以使按钮具有适当的大小 */
    border: 2px solid #90ee90; /* 初始边框颜色 */
}

QPushButton#pushButton_playmode:hover 
{
    background-color: lightgreen; /* 鼠标悬停时的背景颜色 */
    border: 2px solid lightgreen; /* 鼠标悬停时的边框颜色 */
    color: white; /* 鼠标悬停时的文本颜色 */
}

QPushButton#pushButton_playmode:pressed 
{
    background-color: #90ee90; /* 按下时的背景颜色 */
}</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_downloadmusic">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>250</y>
     <width>111</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#pushButton_downloadmusic 
{
    background: transparent;
    border: none;
    border-radius: 10px;
}

QPushButton#pushButton_downloadmusic:hover 
{
    background-color: lightgreen;
}
</string>
   </property>
   <property name="text">
    <string>下载指定歌曲</string>
   </property>
  </widget>
  <widget class="QPushButton" name="showDownloadListButton">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>170</y>
     <width>111</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#showDownloadListButton
{
    background: transparent;
    border: none;
    border-radius: 10px;
}

QPushButton#showDownloadListButton:hover 
{
    background-color: lightgreen;
}
</string>
   </property>
   <property name="text">
    <string>下载列表信息</string>
   </property>
  </widget>
  <widget class="QPushButton" name="showDownloadListPlayButton">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>90</y>
     <width>111</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#showDownloadListPlayButton
{
    background: transparent;
    border: none;
    border-radius: 10px;
}

QPushButton#showDownloadListPlayButton:hover 
{
    background-color: lightgreen;
}
</string>
   </property>
   <property name="text">
    <string>下载列表播放</string>
   </property>
  </widget>
  <widget class="QLabel" name="label_currentPlayMusicName">
   <property name="geometry">
    <rect>
     <x>450</x>
     <y>380</y>
     <width>221</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="LRCShow">
   <property name="geometry">
    <rect>
     <x>660</x>
     <y>430</y>
     <width>31</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#LRCShow 
{
	border-image: url(:/image/LRCShow.png);
    background-color: white; /* 初始背景颜色 */
    border-radius: 15px; /* 调整为合适的值，使按钮变为圆形 */
    color: black; /* 初始文本颜色 */
    padding: 10px; /* 添加一些填充，以使按钮具有适当的大小 */
    border: 2px solid #90ee90; /* 初始边框颜色 */
}

QPushButton#LRCShow:hover 
{
    background-color: lightgreen; /* 鼠标悬停时的背景颜色 */
    border: 2px solid lightgreen; /* 鼠标悬停时的边框颜色 */
    color: white; /* 鼠标悬停时的文本颜色 */
}

QPushButton#LRCShow:pressed 
{
    background-color: #90ee90; /* 按下时的背景颜色 */
}
</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_BatchDownload">
   <property name="geometry">
    <rect>
     <x>9</x>
     <y>320</y>
     <width>111</width>
     <height>31</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton#pushButton_BatchDownload 
{
    background: transparent;
    border: none;
    border-radius: 10px;
}

QPushButton#pushButton_BatchDownload:hover 
{
    background-color: lightgreen;
}</string>
   </property>
   <property name="text">
    <string>批量下载</string>
   </property>
  </widget>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources/>
 <connections/>
</ui>
